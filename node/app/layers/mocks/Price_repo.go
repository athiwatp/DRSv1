// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/layers/repositories/Price/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
	entities "gitlab.com/velo-labs/cen/node/app/entities"
	reflect "reflect"
)

// MockPriceRepo is a mock of Repo interface
type MockPriceRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPriceRepoMockRecorder
}

// MockPriceRepoMockRecorder is the mock recorder for MockPriceRepo
type MockPriceRepoMockRecorder struct {
	mock *MockPriceRepo
}

// NewMockPriceRepo creates a new mock instance
func NewMockPriceRepo(ctrl *gomock.Controller) *MockPriceRepo {
	mock := &MockPriceRepo{ctrl: ctrl}
	mock.recorder = &MockPriceRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPriceRepo) EXPECT() *MockPriceRepoMockRecorder {
	return m.recorder
}

// CreatePriceEntryTx mocks base method
func (m *MockPriceRepo) CreatePriceEntryTx(dbTx *gorm.DB, whitelist *entities.CreatePriceEntry) (*entities.CreatePriceEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePriceEntryTx", dbTx, whitelist)
	ret0, _ := ret[0].(*entities.CreatePriceEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePriceEntryTx indicates an expected call of CreatePriceEntryTx
func (mr *MockPriceRepoMockRecorder) CreatePriceEntryTx(dbTx, whitelist interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePriceEntryTx", reflect.TypeOf((*MockPriceRepo)(nil).CreatePriceEntryTx), dbTx, whitelist)
}

// CreatePriceEntry mocks base method
func (m *MockPriceRepo) CreatePriceEntry(whitelist *entities.CreatePriceEntry) (*entities.CreatePriceEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePriceEntry", whitelist)
	ret0, _ := ret[0].(*entities.CreatePriceEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePriceEntry indicates an expected call of CreatePriceEntry
func (mr *MockPriceRepoMockRecorder) CreatePriceEntry(whitelist interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePriceEntry", reflect.TypeOf((*MockPriceRepo)(nil).CreatePriceEntry), whitelist)
}
