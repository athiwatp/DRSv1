// Code generated by protoc-gen-go. DO NOT EDIT.
// source: velo_node.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VeloTxRequest struct {
	SignedVeloTxXdr      string   `protobuf:"bytes,1,opt,name=signedVeloTxXdr,proto3" json:"signedVeloTxXdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VeloTxRequest) Reset()         { *m = VeloTxRequest{} }
func (m *VeloTxRequest) String() string { return proto.CompactTextString(m) }
func (*VeloTxRequest) ProtoMessage()    {}
func (*VeloTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{0}
}

func (m *VeloTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VeloTxRequest.Unmarshal(m, b)
}
func (m *VeloTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VeloTxRequest.Marshal(b, m, deterministic)
}
func (m *VeloTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VeloTxRequest.Merge(m, src)
}
func (m *VeloTxRequest) XXX_Size() int {
	return xxx_messageInfo_VeloTxRequest.Size(m)
}
func (m *VeloTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VeloTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VeloTxRequest proto.InternalMessageInfo

func (m *VeloTxRequest) GetSignedVeloTxXdr() string {
	if m != nil {
		return m.SignedVeloTxXdr
	}
	return ""
}

type VeloTxReply struct {
	SignedStellarTxXdr   string   `protobuf:"bytes,1,opt,name=signedStellarTxXdr,proto3" json:"signedStellarTxXdr,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VeloTxReply) Reset()         { *m = VeloTxReply{} }
func (m *VeloTxReply) String() string { return proto.CompactTextString(m) }
func (*VeloTxReply) ProtoMessage()    {}
func (*VeloTxReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{1}
}

func (m *VeloTxReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VeloTxReply.Unmarshal(m, b)
}
func (m *VeloTxReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VeloTxReply.Marshal(b, m, deterministic)
}
func (m *VeloTxReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VeloTxReply.Merge(m, src)
}
func (m *VeloTxReply) XXX_Size() int {
	return xxx_messageInfo_VeloTxReply.Size(m)
}
func (m *VeloTxReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VeloTxReply.DiscardUnknown(m)
}

var xxx_messageInfo_VeloTxReply proto.InternalMessageInfo

func (m *VeloTxReply) GetSignedStellarTxXdr() string {
	if m != nil {
		return m.SignedStellarTxXdr
	}
	return ""
}

func (m *VeloTxReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetExchangeRateRequest struct {
	AssetCode            string   `protobuf:"bytes,1,opt,name=assetCode,proto3" json:"assetCode,omitempty"`
	Issuer               string   `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExchangeRateRequest) Reset()         { *m = GetExchangeRateRequest{} }
func (m *GetExchangeRateRequest) String() string { return proto.CompactTextString(m) }
func (*GetExchangeRateRequest) ProtoMessage()    {}
func (*GetExchangeRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{2}
}

func (m *GetExchangeRateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExchangeRateRequest.Unmarshal(m, b)
}
func (m *GetExchangeRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExchangeRateRequest.Marshal(b, m, deterministic)
}
func (m *GetExchangeRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExchangeRateRequest.Merge(m, src)
}
func (m *GetExchangeRateRequest) XXX_Size() int {
	return xxx_messageInfo_GetExchangeRateRequest.Size(m)
}
func (m *GetExchangeRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExchangeRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExchangeRateRequest proto.InternalMessageInfo

func (m *GetExchangeRateRequest) GetAssetCode() string {
	if m != nil {
		return m.AssetCode
	}
	return ""
}

func (m *GetExchangeRateRequest) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type GetExchangeRateReply struct {
	AssetCode              string   `protobuf:"bytes,1,opt,name=assetCode,proto3" json:"assetCode,omitempty"`
	Issuer                 string   `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	RedeemableCollateral   string   `protobuf:"bytes,3,opt,name=redeemableCollateral,proto3" json:"redeemableCollateral,omitempty"`
	RedeemablePricePerUnit string   `protobuf:"bytes,4,opt,name=redeemablePricePerUnit,proto3" json:"redeemablePricePerUnit,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GetExchangeRateReply) Reset()         { *m = GetExchangeRateReply{} }
func (m *GetExchangeRateReply) String() string { return proto.CompactTextString(m) }
func (*GetExchangeRateReply) ProtoMessage()    {}
func (*GetExchangeRateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{3}
}

func (m *GetExchangeRateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExchangeRateReply.Unmarshal(m, b)
}
func (m *GetExchangeRateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExchangeRateReply.Marshal(b, m, deterministic)
}
func (m *GetExchangeRateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExchangeRateReply.Merge(m, src)
}
func (m *GetExchangeRateReply) XXX_Size() int {
	return xxx_messageInfo_GetExchangeRateReply.Size(m)
}
func (m *GetExchangeRateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExchangeRateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetExchangeRateReply proto.InternalMessageInfo

func (m *GetExchangeRateReply) GetAssetCode() string {
	if m != nil {
		return m.AssetCode
	}
	return ""
}

func (m *GetExchangeRateReply) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *GetExchangeRateReply) GetRedeemableCollateral() string {
	if m != nil {
		return m.RedeemableCollateral
	}
	return ""
}

func (m *GetExchangeRateReply) GetRedeemablePricePerUnit() string {
	if m != nil {
		return m.RedeemablePricePerUnit
	}
	return ""
}

type GetCollateralHealthCheckRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollateralHealthCheckRequest) Reset()         { *m = GetCollateralHealthCheckRequest{} }
func (m *GetCollateralHealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollateralHealthCheckRequest) ProtoMessage()    {}
func (*GetCollateralHealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{4}
}

func (m *GetCollateralHealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollateralHealthCheckRequest.Unmarshal(m, b)
}
func (m *GetCollateralHealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollateralHealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *GetCollateralHealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollateralHealthCheckRequest.Merge(m, src)
}
func (m *GetCollateralHealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollateralHealthCheckRequest.Size(m)
}
func (m *GetCollateralHealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollateralHealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollateralHealthCheckRequest proto.InternalMessageInfo

type GetCollateralHealthCheckReply struct {
	AssetCode            string   `protobuf:"bytes,1,opt,name=assetCode,proto3" json:"assetCode,omitempty"`
	AssetIssuer          string   `protobuf:"bytes,2,opt,name=assetIssuer,proto3" json:"assetIssuer,omitempty"`
	RequiredAmount       string   `protobuf:"bytes,3,opt,name=requiredAmount,proto3" json:"requiredAmount,omitempty"`
	PoolAmount           string   `protobuf:"bytes,4,opt,name=poolAmount,proto3" json:"poolAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollateralHealthCheckReply) Reset()         { *m = GetCollateralHealthCheckReply{} }
func (m *GetCollateralHealthCheckReply) String() string { return proto.CompactTextString(m) }
func (*GetCollateralHealthCheckReply) ProtoMessage()    {}
func (*GetCollateralHealthCheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{5}
}

func (m *GetCollateralHealthCheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollateralHealthCheckReply.Unmarshal(m, b)
}
func (m *GetCollateralHealthCheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollateralHealthCheckReply.Marshal(b, m, deterministic)
}
func (m *GetCollateralHealthCheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollateralHealthCheckReply.Merge(m, src)
}
func (m *GetCollateralHealthCheckReply) XXX_Size() int {
	return xxx_messageInfo_GetCollateralHealthCheckReply.Size(m)
}
func (m *GetCollateralHealthCheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollateralHealthCheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollateralHealthCheckReply proto.InternalMessageInfo

func (m *GetCollateralHealthCheckReply) GetAssetCode() string {
	if m != nil {
		return m.AssetCode
	}
	return ""
}

func (m *GetCollateralHealthCheckReply) GetAssetIssuer() string {
	if m != nil {
		return m.AssetIssuer
	}
	return ""
}

func (m *GetCollateralHealthCheckReply) GetRequiredAmount() string {
	if m != nil {
		return m.RequiredAmount
	}
	return ""
}

func (m *GetCollateralHealthCheckReply) GetPoolAmount() string {
	if m != nil {
		return m.PoolAmount
	}
	return ""
}

type RebalanceReserveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebalanceReserveRequest) Reset()         { *m = RebalanceReserveRequest{} }
func (m *RebalanceReserveRequest) String() string { return proto.CompactTextString(m) }
func (*RebalanceReserveRequest) ProtoMessage()    {}
func (*RebalanceReserveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{6}
}

func (m *RebalanceReserveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebalanceReserveRequest.Unmarshal(m, b)
}
func (m *RebalanceReserveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebalanceReserveRequest.Marshal(b, m, deterministic)
}
func (m *RebalanceReserveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebalanceReserveRequest.Merge(m, src)
}
func (m *RebalanceReserveRequest) XXX_Size() int {
	return xxx_messageInfo_RebalanceReserveRequest.Size(m)
}
func (m *RebalanceReserveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebalanceReserveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebalanceReserveRequest proto.InternalMessageInfo

type RebalanceReserveReply struct {
	Items                []*RebalanceCollateral `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	SignedStellarTxXdr   string                 `protobuf:"bytes,2,opt,name=SignedStellarTxXdr,proto3" json:"SignedStellarTxXdr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RebalanceReserveReply) Reset()         { *m = RebalanceReserveReply{} }
func (m *RebalanceReserveReply) String() string { return proto.CompactTextString(m) }
func (*RebalanceReserveReply) ProtoMessage()    {}
func (*RebalanceReserveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{7}
}

func (m *RebalanceReserveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebalanceReserveReply.Unmarshal(m, b)
}
func (m *RebalanceReserveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebalanceReserveReply.Marshal(b, m, deterministic)
}
func (m *RebalanceReserveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebalanceReserveReply.Merge(m, src)
}
func (m *RebalanceReserveReply) XXX_Size() int {
	return xxx_messageInfo_RebalanceReserveReply.Size(m)
}
func (m *RebalanceReserveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RebalanceReserveReply.DiscardUnknown(m)
}

var xxx_messageInfo_RebalanceReserveReply proto.InternalMessageInfo

func (m *RebalanceReserveReply) GetItems() []*RebalanceCollateral {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RebalanceReserveReply) GetSignedStellarTxXdr() string {
	if m != nil {
		return m.SignedStellarTxXdr
	}
	return ""
}

type RebalanceCollateral struct {
	AssetCode            string   `protobuf:"bytes,1,opt,name=assetCode,proto3" json:"assetCode,omitempty"`
	AssetIssuer          string   `protobuf:"bytes,2,opt,name=assetIssuer,proto3" json:"assetIssuer,omitempty"`
	RequiredAmount       string   `protobuf:"bytes,3,opt,name=requiredAmount,proto3" json:"requiredAmount,omitempty"`
	PoolAmount           string   `protobuf:"bytes,4,opt,name=poolAmount,proto3" json:"poolAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebalanceCollateral) Reset()         { *m = RebalanceCollateral{} }
func (m *RebalanceCollateral) String() string { return proto.CompactTextString(m) }
func (*RebalanceCollateral) ProtoMessage()    {}
func (*RebalanceCollateral) Descriptor() ([]byte, []int) {
	return fileDescriptor_a824ed0044bf442b, []int{8}
}

func (m *RebalanceCollateral) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebalanceCollateral.Unmarshal(m, b)
}
func (m *RebalanceCollateral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebalanceCollateral.Marshal(b, m, deterministic)
}
func (m *RebalanceCollateral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebalanceCollateral.Merge(m, src)
}
func (m *RebalanceCollateral) XXX_Size() int {
	return xxx_messageInfo_RebalanceCollateral.Size(m)
}
func (m *RebalanceCollateral) XXX_DiscardUnknown() {
	xxx_messageInfo_RebalanceCollateral.DiscardUnknown(m)
}

var xxx_messageInfo_RebalanceCollateral proto.InternalMessageInfo

func (m *RebalanceCollateral) GetAssetCode() string {
	if m != nil {
		return m.AssetCode
	}
	return ""
}

func (m *RebalanceCollateral) GetAssetIssuer() string {
	if m != nil {
		return m.AssetIssuer
	}
	return ""
}

func (m *RebalanceCollateral) GetRequiredAmount() string {
	if m != nil {
		return m.RequiredAmount
	}
	return ""
}

func (m *RebalanceCollateral) GetPoolAmount() string {
	if m != nil {
		return m.PoolAmount
	}
	return ""
}

func init() {
	proto.RegisterType((*VeloTxRequest)(nil), "grpc.VeloTxRequest")
	proto.RegisterType((*VeloTxReply)(nil), "grpc.VeloTxReply")
	proto.RegisterType((*GetExchangeRateRequest)(nil), "grpc.GetExchangeRateRequest")
	proto.RegisterType((*GetExchangeRateReply)(nil), "grpc.GetExchangeRateReply")
	proto.RegisterType((*GetCollateralHealthCheckRequest)(nil), "grpc.GetCollateralHealthCheckRequest")
	proto.RegisterType((*GetCollateralHealthCheckReply)(nil), "grpc.GetCollateralHealthCheckReply")
	proto.RegisterType((*RebalanceReserveRequest)(nil), "grpc.RebalanceReserveRequest")
	proto.RegisterType((*RebalanceReserveReply)(nil), "grpc.RebalanceReserveReply")
	proto.RegisterType((*RebalanceCollateral)(nil), "grpc.RebalanceCollateral")
}

func init() { proto.RegisterFile("velo_node.proto", fileDescriptor_a824ed0044bf442b) }

var fileDescriptor_a824ed0044bf442b = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x6d, 0x29, 0x74, 0x02, 0x04, 0xb6, 0x25, 0xb8, 0xa6, 0x85, 0xb0, 0x08, 0x94, 0x53,
	0x90, 0x82, 0x84, 0xe0, 0x88, 0x22, 0x54, 0x38, 0x50, 0x45, 0x0e, 0x5f, 0x37, 0xb4, 0xb1, 0x47,
	0xb1, 0xc5, 0xda, 0xeb, 0xee, 0xae, 0xab, 0xf4, 0xc7, 0x70, 0xe6, 0x2f, 0xf0, 0x2f, 0xf8, 0x4b,
	0xc8, 0x5e, 0xbb, 0x71, 0x1c, 0x9b, 0x48, 0x9c, 0x7a, 0xdc, 0xf7, 0xde, 0xbc, 0x9d, 0x59, 0xbf,
	0x31, 0x74, 0xcf, 0x91, 0x8b, 0xef, 0xb1, 0xf0, 0x71, 0x98, 0x48, 0xa1, 0x05, 0xd9, 0x99, 0xcb,
	0xc4, 0xa3, 0x6f, 0xe0, 0xf6, 0x17, 0xe4, 0xe2, 0xd3, 0xc2, 0xc5, 0xb3, 0x14, 0x95, 0x26, 0x03,
	0xe8, 0xaa, 0x70, 0x1e, 0xa3, 0x6f, 0xe0, 0x6f, 0xbe, 0xb4, 0xad, 0xbe, 0x35, 0xd8, 0x73, 0xeb,
	0x30, 0xfd, 0x0a, 0x9d, 0xb2, 0x34, 0xe1, 0x17, 0x64, 0x08, 0xc4, 0x28, 0xa6, 0x1a, 0x39, 0x67,
	0xb2, 0x5a, 0xdb, 0xc0, 0x10, 0x1b, 0x6e, 0x44, 0xa8, 0x14, 0x9b, 0xa3, 0xbd, 0x95, 0x8b, 0xca,
	0x23, 0x3d, 0x85, 0xde, 0x09, 0xea, 0x77, 0x0b, 0x2f, 0x60, 0xf1, 0x1c, 0x5d, 0xa6, 0xb1, 0x6c,
	0xee, 0x08, 0xf6, 0x98, 0x52, 0xa8, 0xc7, 0xc2, 0xc7, 0xc2, 0x7a, 0x09, 0x90, 0x1e, 0xec, 0x86,
	0x4a, 0xa5, 0x28, 0x0b, 0xc3, 0xe2, 0x44, 0x7f, 0x5b, 0x70, 0xb0, 0x66, 0x98, 0xb5, 0xfc, 0x5f,
	0x76, 0x64, 0x04, 0x07, 0x12, 0x7d, 0xc4, 0x88, 0xcd, 0x38, 0x8e, 0x05, 0xe7, 0x4c, 0xa3, 0x64,
	0xdc, 0xde, 0xce, 0x55, 0x8d, 0x1c, 0x79, 0x05, 0xbd, 0x25, 0x3e, 0x91, 0xa1, 0x87, 0x13, 0x94,
	0x9f, 0xe3, 0x50, 0xdb, 0x3b, 0x79, 0x55, 0x0b, 0x4b, 0x9f, 0xc0, 0xe3, 0x93, 0xac, 0x9d, 0xd2,
	0xe8, 0x3d, 0x32, 0xae, 0x83, 0x71, 0x80, 0xde, 0x8f, 0xe2, 0x4d, 0xe8, 0x2f, 0x0b, 0x8e, 0xdb,
	0x35, 0x9b, 0xc7, 0xec, 0x43, 0x27, 0x3f, 0x7c, 0xa8, 0xce, 0x5a, 0x85, 0xc8, 0x73, 0xb8, 0x23,
	0xf1, 0x2c, 0x0d, 0x25, 0xfa, 0x6f, 0x23, 0x91, 0xc6, 0xba, 0x18, 0xb5, 0x86, 0x92, 0x47, 0x00,
	0x89, 0x10, 0xbc, 0xd0, 0x98, 0xc1, 0x2a, 0x08, 0x3d, 0x84, 0x07, 0x2e, 0xce, 0x18, 0x67, 0xb1,
	0x87, 0x2e, 0x2a, 0x94, 0xe7, 0xe5, 0x87, 0xa5, 0x0b, 0xb8, 0xbf, 0x4e, 0x65, 0xbd, 0xbf, 0x80,
	0xeb, 0xa1, 0xc6, 0x48, 0xd9, 0x56, 0x7f, 0x7b, 0xd0, 0x19, 0x1d, 0x0e, 0xb3, 0xd4, 0x0e, 0x2f,
	0xb5, 0xcb, 0xa9, 0x5d, 0xa3, 0xcb, 0x62, 0x38, 0x5d, 0x8f, 0xa1, 0x99, 0xaa, 0x81, 0xa1, 0x3f,
	0x2d, 0xd8, 0x6f, 0xb0, 0xbb, 0x2a, 0x8f, 0x36, 0xfa, 0xb3, 0x05, 0x37, 0xb3, 0x35, 0x3b, 0xcd,
	0xae, 0x7d, 0x0d, 0xb7, 0xa6, 0xe9, 0x2c, 0x0a, 0xb5, 0x59, 0x3c, 0xb2, 0x6f, 0x9e, 0x63, 0x65,
	0x83, 0x9d, 0x7b, 0xab, 0x60, 0xc2, 0x2f, 0xe8, 0x35, 0xf2, 0x11, 0xba, 0xb5, 0x15, 0x20, 0x47,
	0x46, 0xd7, 0xbc, 0x6a, 0x8e, 0xd3, 0xc2, 0x1a, 0xbb, 0x00, 0xec, 0xb6, 0xcc, 0x91, 0x67, 0x97,
	0x95, 0xff, 0xca, 0xad, 0xf3, 0x74, 0x93, 0xcc, 0xdc, 0x34, 0x81, 0xbb, 0xf5, 0x64, 0x90, 0xe3,
	0x5a, 0x0a, 0x56, 0xc3, 0xe4, 0x3c, 0x6c, 0xa3, 0x73, 0xc7, 0xd9, 0x6e, 0xfe, 0xff, 0x7b, 0xf9,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x82, 0x55, 0x72, 0x12, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VeloNodeClient is the client API for VeloNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VeloNodeClient interface {
	SubmitVeloTx(ctx context.Context, in *VeloTxRequest, opts ...grpc.CallOption) (*VeloTxReply, error)
	GetExchangeRate(ctx context.Context, in *GetExchangeRateRequest, opts ...grpc.CallOption) (*GetExchangeRateReply, error)
	GetCollateralHealthCheck(ctx context.Context, in *GetCollateralHealthCheckRequest, opts ...grpc.CallOption) (*GetCollateralHealthCheckReply, error)
	RebalanceReserve(ctx context.Context, in *RebalanceReserveRequest, opts ...grpc.CallOption) (*RebalanceReserveReply, error)
}

type veloNodeClient struct {
	cc *grpc.ClientConn
}

func NewVeloNodeClient(cc *grpc.ClientConn) VeloNodeClient {
	return &veloNodeClient{cc}
}

func (c *veloNodeClient) SubmitVeloTx(ctx context.Context, in *VeloTxRequest, opts ...grpc.CallOption) (*VeloTxReply, error) {
	out := new(VeloTxReply)
	err := c.cc.Invoke(ctx, "/grpc.VeloNode/SubmitVeloTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veloNodeClient) GetExchangeRate(ctx context.Context, in *GetExchangeRateRequest, opts ...grpc.CallOption) (*GetExchangeRateReply, error) {
	out := new(GetExchangeRateReply)
	err := c.cc.Invoke(ctx, "/grpc.VeloNode/GetExchangeRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veloNodeClient) GetCollateralHealthCheck(ctx context.Context, in *GetCollateralHealthCheckRequest, opts ...grpc.CallOption) (*GetCollateralHealthCheckReply, error) {
	out := new(GetCollateralHealthCheckReply)
	err := c.cc.Invoke(ctx, "/grpc.VeloNode/GetCollateralHealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veloNodeClient) RebalanceReserve(ctx context.Context, in *RebalanceReserveRequest, opts ...grpc.CallOption) (*RebalanceReserveReply, error) {
	out := new(RebalanceReserveReply)
	err := c.cc.Invoke(ctx, "/grpc.VeloNode/RebalanceReserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VeloNodeServer is the server API for VeloNode service.
type VeloNodeServer interface {
	SubmitVeloTx(context.Context, *VeloTxRequest) (*VeloTxReply, error)
	GetExchangeRate(context.Context, *GetExchangeRateRequest) (*GetExchangeRateReply, error)
	GetCollateralHealthCheck(context.Context, *GetCollateralHealthCheckRequest) (*GetCollateralHealthCheckReply, error)
	RebalanceReserve(context.Context, *RebalanceReserveRequest) (*RebalanceReserveReply, error)
}

// UnimplementedVeloNodeServer can be embedded to have forward compatible implementations.
type UnimplementedVeloNodeServer struct {
}

func (*UnimplementedVeloNodeServer) SubmitVeloTx(ctx context.Context, req *VeloTxRequest) (*VeloTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitVeloTx not implemented")
}
func (*UnimplementedVeloNodeServer) GetExchangeRate(ctx context.Context, req *GetExchangeRateRequest) (*GetExchangeRateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExchangeRate not implemented")
}
func (*UnimplementedVeloNodeServer) GetCollateralHealthCheck(ctx context.Context, req *GetCollateralHealthCheckRequest) (*GetCollateralHealthCheckReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollateralHealthCheck not implemented")
}
func (*UnimplementedVeloNodeServer) RebalanceReserve(ctx context.Context, req *RebalanceReserveRequest) (*RebalanceReserveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RebalanceReserve not implemented")
}

func RegisterVeloNodeServer(s *grpc.Server, srv VeloNodeServer) {
	s.RegisterService(&_VeloNode_serviceDesc, srv)
}

func _VeloNode_SubmitVeloTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VeloTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeloNodeServer).SubmitVeloTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.VeloNode/SubmitVeloTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeloNodeServer).SubmitVeloTx(ctx, req.(*VeloTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeloNode_GetExchangeRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExchangeRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeloNodeServer).GetExchangeRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.VeloNode/GetExchangeRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeloNodeServer).GetExchangeRate(ctx, req.(*GetExchangeRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeloNode_GetCollateralHealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollateralHealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeloNodeServer).GetCollateralHealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.VeloNode/GetCollateralHealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeloNodeServer).GetCollateralHealthCheck(ctx, req.(*GetCollateralHealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeloNode_RebalanceReserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebalanceReserveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeloNodeServer).RebalanceReserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.VeloNode/RebalanceReserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeloNodeServer).RebalanceReserve(ctx, req.(*RebalanceReserveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VeloNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.VeloNode",
	HandlerType: (*VeloNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitVeloTx",
			Handler:    _VeloNode_SubmitVeloTx_Handler,
		},
		{
			MethodName: "GetExchangeRate",
			Handler:    _VeloNode_GetExchangeRate_Handler,
		},
		{
			MethodName: "GetCollateralHealthCheck",
			Handler:    _VeloNode_GetCollateralHealthCheck_Handler,
		},
		{
			MethodName: "RebalanceReserve",
			Handler:    _VeloNode_RebalanceReserve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "velo_node.proto",
}
