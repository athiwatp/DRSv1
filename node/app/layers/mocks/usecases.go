// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/layers/usecases/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	txnbuild "gitlab.com/velo-labs/cen/libs/txnbuild"
	errors "gitlab.com/velo-labs/cen/node/app/errors"
	reflect "reflect"
)

// MockUseCase is a mock of UseCase interface
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// SetupCredit mocks base method
func (m *MockUseCase) SetupCredit(ctx context.Context, veloTx *txnbuild.VeloTx) (*string, errors.NodeError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetupCredit", ctx, veloTx)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(errors.NodeError)
	return ret0, ret1
}

// SetupCredit indicates an expected call of SetupCredit
func (mr *MockUseCaseMockRecorder) SetupCredit(ctx, veloTx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetupCredit", reflect.TypeOf((*MockUseCase)(nil).SetupCredit), ctx, veloTx)
}

// CreateWhiteList mocks base method
func (m *MockUseCase) CreateWhiteList(ctx context.Context, veloTx *txnbuild.VeloTx) errors.NodeError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWhiteList", ctx, veloTx)
	ret0, _ := ret[0].(errors.NodeError)
	return ret0
}

// CreateWhiteList indicates an expected call of CreateWhiteList
func (mr *MockUseCaseMockRecorder) CreateWhiteList(ctx, veloTx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWhiteList", reflect.TypeOf((*MockUseCase)(nil).CreateWhiteList), ctx, veloTx)
}

// UpdatePrice mocks base method
func (m *MockUseCase) UpdatePrice(ctx context.Context, veloTx *txnbuild.VeloTx) errors.NodeError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePrice", ctx, veloTx)
	ret0, _ := ret[0].(errors.NodeError)
	return ret0
}

// UpdatePrice indicates an expected call of UpdatePrice
func (mr *MockUseCaseMockRecorder) UpdatePrice(ctx, veloTx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePrice", reflect.TypeOf((*MockUseCase)(nil).UpdatePrice), ctx, veloTx)
}
